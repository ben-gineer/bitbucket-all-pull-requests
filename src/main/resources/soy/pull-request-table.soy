{namespace bitbucket.feature.pullRequest}

/**
 * @param pullRequestPage the page of pull requests to render in the table
 * @param currentUser the current user
 * @param? id table for the id, defaults to 'pull-requests-table'
 * @param? extraClasses the extra classes for the table
 * @param? scope options: repository (show id) [default]; global (repo)
 * @param? alwaysDisplayRepositories When true, ref lozenges will always include repository information.
                                     When false, the source lozenge will show repository information if
                                     it doesn't match the target repository.
 * @param? showStatus toggles the rendering of the status column, the status column will contain OPEN, MERGED or
 * DECLINED lozenges
 * @param? hideAuthorName toggles the rendering of the author name in addition to their avatar (defaults to false)
 */
{template .pullRequestTable}
    {let $page: $pullRequestPage /}
    {let $pageAttributes: $page ? concat([
           'start' : $page.start,
           'size' : $page.size,
           'lastpage' : $page.isLastPage
        ], $page.nextPageRequest ? [
           'nextpagestart' : $page.nextPageRequest.start
        ] : [:]) : [:] /}
    {let $prExtraClasses: 'pull-requests-table' + ($extraClasses ? ' ' + $extraClasses : '') /}
    {call widget.aui.table}
        {param id: $id ? $id : 'pull-requests-table' /}

        {param dataAttributes: $pageAttributes /}
        {param extraClasses}
            paged-table
            {if $extraClasses}{sp}{$prExtraClasses}{/if}
            {if not $page or $page.size == 0}{sp}no-rows{/if}
        {/param}
        {param theadContent}
            <tr>
                {if $scope == 'global'}
                <th class="repository">{getText('bitbucket.web.pullrequest.list.col.repository')}</th>
                {else}
                <th class="id">{getText('bitbucket.web.pullrequest.list.col.id')}</th>
                {/if}
                <th class="title">{getText('bitbucket.web.pullrequest.list.col.title')}</th>
                {if $showStatus}
                <th class="status">{getText('bitbucket.web.pullrequest.list.col.status')}</th>
                {/if}
                <th class="author">{getText('bitbucket.web.pullrequest.list.col.author')}</th>
                <th class="reviewers">{getText('bitbucket.web.pullrequest.list.col.reviewers')}</th>
                <th class="comment-count"></th>
				{foreach $webSection in getWebSections('bitbucket.pull-request.table-column')}
					<th class="{$webSection.key}" title="{$webSection.labelText}">{$webSection.labelText}</th>
				{/foreach}
				<th class="opened-tasks">{getText('bitbucket.web.pullrequest.list.col.openedTasks')}</th>
				<th class="closed-tasks">{getText('bitbucket.web.pullrequest.list.col.closedTasks')}</th>
                <th class="source">{getText('bitbucket.web.pullrequest.list.col.source')}</th>
                <th class="destination">{getText('bitbucket.web.pullrequest.list.col.destination')}</th>
                <th class="updated">{getText('bitbucket.web.pullrequest.list.col.update')}</th>
            </tr>
        {/param}
        {param content}
            {if $pullRequestPage}
                {foreach $pullRequest in $pullRequestPage.values}
                    {call .pullRequestRow}
                        {param pullRequest: $pullRequest /}
                        {param scope: $scope /}
                        {param currentUser: $currentUser /}
                        {param alwaysDisplayRepositories: $alwaysDisplayRepositories /}
                        {param showStatus: $showStatus /}
                        {param hideAuthorName: $hideAuthorName /}
                    {/call}
                {/foreach}
            {/if}
        {/param}
    {/call}
{/template}

/**
 * @param pullRequest the pull request to render for the row
 * @param? currentUser the current user or null if anonymous
 * @param? scope options: repository (show id) [default]; global (repo)
 * @param? alwaysDisplayRepositories When true, ref lozenges will always include repository information.
                                     When false, the source lozenge will show repository information if
                                     it doesn't match the target repository.
 * @param? showStatus toggles the rendering of the status column, the status column will contain OPEN, MERGED or DECLINED lozenges
 * @param? hideAuthorName toggles the rendering of the author name in addition to their avatar (defaults to true)
 */
{template .pullRequestRow}
    <tr data-pullrequestid="{$pullRequest.id}" class="pull-request-row
        {if $currentUser}
            {if $pullRequest.author.user.name == $currentUser.name}
                {sp}current-user{if $pullRequest.state != 'OPEN'}{sp}current-user-actioned{/if}
            {else}
                {foreach $reviewer in $pullRequest.reviewers}
                    {if $reviewer.user.name == $currentUser.name}
                        {sp}current-user{if $reviewer.approved}{sp}current-user-actioned{/if}
                    {/if}
                {/foreach}
            {/if}
        {/if}
        ">

        {if $scope == 'global'}
        <td class="repository">
            {call bitbucket.internal.feature.project.projectAvatar.projectAvatar.avatar}
                {param size: 'small' /}
                {param project: $pullRequest.toRef.repository.project /}
            {/call}
            <span title="{$pullRequest.toRef.repository.name}">{$pullRequest.toRef.repository.slug}</span>
        </td>
        {else}
        <td class="id">
            <a title="{{getText('bitbucket.web.pullrequest.link.alt', $pullRequest.id, $pullRequest.toRef.repository.slug)}}"
                href="{nav_pull($pullRequest.toRef.repository.project.key, $pullRequest.toRef.repository.slug, $pullRequest.id)}">#{$pullRequest.id}</a>
        </td>
        {/if}
        <td class="title">
            <a title="{$pullRequest.title}"
                href="{nav_pull($pullRequest.toRef.repository.project.key, $pullRequest.toRef.repository.slug, $pullRequest.id)}">{$pullRequest.title|truncate:100|escapeHtml}</a>
        </td>
        {if $showStatus}
         <td class="status">
            {call bitbucket.internal.widget.lozenge.lozenge.pullRequestState}
                {param state: $pullRequest.state /}
                {param extraClasses: ' aui-lozenge-subtle' /}
            {/call}
         </td>
        {/if}
        <td class="author">
            {if $hideAuthorName}
                {call bitbucket.internal.widget.avatar.avatar.avatar}
                    {param size: 'small' /}
                    {param person: $pullRequest.author.user /}
                    {param tooltip: $pullRequest.author.user.displayName /}
                {/call}
            {else}
                {call bitbucket.internal.widget.avatar.avatar.avatarWithName}
                    {param size: 'small' /}
                    {param person: $pullRequest.author.user /}
                    {param link: true /}
                    {param linkExtraClasses: 'secondary-link' /}
                {/call}
            {/if}
        </td>
        <td class="reviewers">
            {call bitbucket.internal.widget.avatarList.avatarList.participantList}
                {param participants: $pullRequest.reviewers /}
                {param menuId: 'reviewers-' + $pullRequest.id /}
                {param menuClass: 'pull-request-table-reviewers' /}
                {param maxOpen: 5 /}
                {param avatarSize: 'small' /}
            {/call}
        </td>
        <td class="comment-count">
            {if $pullRequest.properties and $pullRequest.properties.commentCount}
                <span class="comment-count" title="{getText('bitbucket.web.comment.count', to_int($pullRequest.properties.commentCount))}">
                    {call aui.icons.icon}
                        {param icon: 'comment' /}
                        {param size: 'small' /}
                        {param useIconFont: true /}
                        {param accessibilityText: getText('bitbucket.web.comment.count', to_int($pullRequest.properties.commentCount)) /}
                    {/call}
                   <span class="count">{cap_int($pullRequest.properties.commentCount, 99)}</span>
                </span>
            {/if}
        </td>
        {foreach $webSection in getWebSections('bitbucket.pull-request.table-column')}
        	{call .pullRequestRowExtras}
        		{param webSection: $webSection /}
        		{param pullRequest: $pullRequest /}
        	{/call}
        {/foreach}
        <td class="opened-tasks">
            <span title="{getText('bitbucket.web.pullrequest.list.col.openedTasks')}">{$pullRequest.openedTasksCount}</span>
        </td>
        <td class="closed-tasks">
            <span title="{getText('bitbucket.web.pullrequest.list.col.closedTasks')}">{$pullRequest.closedTasksCount}</span>
        </td>
        <td class="source">
            {call bitbucket.internal.feature.repository.refLozenge.refLozenge.refLozenge}
                {param repository: $alwaysDisplayRepositories or $pullRequest.fromRef.repository.id != $pullRequest.toRef.repository.id ?
                    $pullRequest.fromRef.repository :
                    null /}
                {param ref: $pullRequest.fromRef /}
            {/call}
        </td>
        <td class="destination">
            {call bitbucket.internal.feature.repository.refLozenge.refLozenge.refLozenge}
                {param repository: $alwaysDisplayRepositories ?
                    $pullRequest.toRef.repository :
                    null /}
                {param ref: $pullRequest.toRef /}
            {/call}
        </td>
        <td class="updated">
            {call bitbucket.internal.widget.date.time.shortAge}
                {param date: $pullRequest.updatedDate /}
            {/call}
        </td>
    </tr>
{/template}

/**
 * @param? state the pull request state the table is supposed to be showing
 */
{template .pullRequestTableEmpty}
    <h3 class="entity-empty">
        {if $state and $state != 'all'}
           {{getText('bitbucket.web.pullrequest.empty', $state)}}
        {else}
            {getText('bitbucket.web.pullrequest.empty.nostate')}
        {/if}
    </h3>
{/template}

/**
 * @param pullRequest
 * @param webSection
 */
{template .pullRequestRowExtras private="true"}
	{foreach $webPanelHtml in getWebPanels('bitbucket.pull-request.table-column/' + $webSection.key, [ 'pullRequest' : $pullRequest ])}
        <td class="{$webSection.key}-value">
			{$webPanelHtml}
        </td>
    {/foreach}
{/template}
